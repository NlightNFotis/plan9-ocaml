# -*- sh -*-
TOP=..

SRC= IO_.ml \
     sha1.ml hexsha.ml \
     unzip.ml zlib.ml compression.ml \
     blob.ml tree.ml  user.ml commit.ml    objects.ml \
     refs.ml \
     index.ml \
     diff_simple.ml diff_myers.ml \
     change.ml diff.ml diff_unified.ml diff_tree.ml \
     repository.ml \
     cmd.ml \
     cmd_init.ml \
     cmd_add.ml cmd_rm.ml cmd_commit.ml \
     cmd_branch.ml cmd_checkout.ml cmd_reset.ml \
     cmd_show.ml cmd_diff.ml cmd_log.ml cmd_status.ml \
     cmd_pull.ml \
     dump.ml cmd_dump.ml cmd_test.ml \
     cmds.ml cmd_help.ml \
     main.ml

INCLUDES=-I $TOP/lib_core/commons

LIBS=$TOP/lib_core/commons/lib.cma

SYSLIBS=unix.cma str.cma

PROG=ogit

<$TOP/mkconfig

COBJS=zlibstubs.o
CCLIBS=-cclib -lz

%.o: %.c
	$OCAMLC -c $stem.c

#<$TOP/mkprog
# include  of mkprog:
</$objtype/mkfile
#<$TOP/mkconfig

# assumes the "includer" has defined:
#  TOP, SRC, INCLUDES, LIBS, SYSLIBS, CCLIBS, and PROG

OBJS=${SRC:%.ml=%.cmo}

all:V: $PROG
opt:V: $PROG.opt

$PROG: $OBJS $COBJS $LIBS
	$OCAMLC -custom $LINKFLAGS $EXTRALINKFLAGS $INCLUDES $SYSLIBS $LIBS $prereq $CCLIBS -o $target

SYSLIBSOPT=${SYSLIBS:%.cma=%.cmxa}
LIBSOPT=${LIBS:%.cma=%.cmxa}

$PROG.opt: ${OBJS:%.cmo=%.cmx}
	$OCAMLOPT $INCLUDES $SYSLIBSOPT $LIBSOPT $prereq -o $target

clean:V:
	rm -f $PROG $PROG.opt *.cm[ioxa] *.cmxa  *.o *.a  *.annot *.cmt*
	rm -f *~ .*~ *.exe gmon.out *.output

<$TOP/mkcommon
<.depend

